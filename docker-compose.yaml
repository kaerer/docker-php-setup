version: '3'

networks:
  main-network:

volumes:
  mysql-data:

services:
  web-service:
    image: nginx:stable-alpine
    container_name: web-container
    ports:
      - "8080:80"
    volumes:
      - ./app:/var/www/project
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app-service
      - db-service
    networks:
      - main-network
  app-service:
    build:
      dockerfile: ./php/Dockerfile
      target: "${BUILD_TARGET:-app}"
    container_name: app-container
    ports:
      - "9000:9000"
    volumes:
      - ./app:/var/www/project
    networks:
      - main-network
    environment:
      # See https://xdebug.org/docs/all_settings#mode
      XDEBUG_MODE: "${XDEBUG_MODE:-off}"
  db-service:
    image: mysql:8
    container_name: db-container
    volumes:
      - mysql-data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always # always restart unless stopped manually
    networks:
      - main-network
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
  cache-redis-service:
    image: redis:alpine
  cache-memcached-service:
    image: memcached:alpine

#    # node
#    node-service:
#        image: node:latest
#        container_name: node-container
#        volumes:
#            - ./app:/var/www/project
#        working_dir: /var/www/project
#        networks:
#            - main-network